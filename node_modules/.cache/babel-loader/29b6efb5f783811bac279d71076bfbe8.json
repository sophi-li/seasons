{"ast":null,"code":"var _jsxFileName = \"/Users/SophiaLi/Documents/git/seasons/src/index.js\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import SeasonDisplay from \"./SeasonDisplay\";\n// // Functional component:\n// // const App = () => {\n// //     window.navigator.geolocation.getCurrentPosition(\n// //         (position) => console.log(position),\n// //         (err) => console.log(err)\n// //     )\n// //     return (\n// //     <div>Latitude: </div>\n// //     )\n// // }\n// // Class based component\n// // We are subclassing React.Component, basically borrowing functionality into our App class\n// class App extends React.Component {\n//   // state is the same as the constructor function\n//   state = { lat: null, errorMessage: \"\" };\n//   // componenet did mount does the same stuff as constructor func\n//   componentDidMount() {\n//     window.navigator.geolocation.getCurrentPosition(\n//       position => this.setState({ lat: position.coords.latitude }),\n//       err => this.setState({ errorMessage: err.message })\n//     );\n//   }\n//   // We have to define render when using React\n//   render() {\n//     // return (\n//     // <div>Latitude: {this.state.lat}\n//     // < br />\n//     // Error: {this.state.errorMessage}\n//     // </div>\n//     // );\n//     // conditional rendering - returning different JSX depending on state/props of the component\n//     if (this.state.errorMessage && !this.state.lat) {\n//       return <div>Error: {this.state.errorMessage}</div>;\n//     }\n//     if (!this.state.errorMessage && this.state.lat) {\n//       // return <div>Latitude: {this.state.lat}</div>;\n//       return <SeasonDisplay lat={this.state.lat} />;\n//     }\n//     return <div>Loading!</div>;\n//   }\n// }\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Spinner, {\n      message: \"Please accept location request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"border red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/SophiaLi/Documents/git/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","renderContent","render","document","querySelector"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KADwB;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,KAAd,CADd,EAEEC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAApB,KAAd,CAFT;AAID;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACD;;AAED,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKD,aAAL,EAA7B,CAAP;AACD;;AAxB+B;;AA2BlCnB,QAAQ,CAACoB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import SeasonDisplay from \"./SeasonDisplay\";\n\n// // Functional component:\n// // const App = () => {\n// //     window.navigator.geolocation.getCurrentPosition(\n// //         (position) => console.log(position),\n// //         (err) => console.log(err)\n// //     )\n// //     return (\n// //     <div>Latitude: </div>\n// //     )\n// // }\n\n// // Class based component\n// // We are subclassing React.Component, basically borrowing functionality into our App class\n// class App extends React.Component {\n//   // state is the same as the constructor function\n//   state = { lat: null, errorMessage: \"\" };\n//   // componenet did mount does the same stuff as constructor func\n//   componentDidMount() {\n//     window.navigator.geolocation.getCurrentPosition(\n//       position => this.setState({ lat: position.coords.latitude }),\n//       err => this.setState({ errorMessage: err.message })\n//     );\n//   }\n\n//   // We have to define render when using React\n//   render() {\n//     // return (\n//     // <div>Latitude: {this.state.lat}\n//     // < br />\n//     // Error: {this.state.errorMessage}\n//     // </div>\n//     // );\n\n//     // conditional rendering - returning different JSX depending on state/props of the component\n//     if (this.state.errorMessage && !this.state.lat) {\n//       return <div>Error: {this.state.errorMessage}</div>;\n//     }\n//     if (!this.state.errorMessage && this.state.lat) {\n//       // return <div>Latitude: {this.state.lat}</div>;\n//       return <SeasonDisplay lat={this.state.lat} />;\n//     }\n//     return <div>Loading!</div>;\n//   }\n// }\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  state = { lat: null, errorMessage: \"\" };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n\n    return <Spinner message=\"Please accept location request\" />;\n  }\n\n  render() {\n    return <div className=\"border red\">{this.renderContent()}</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}