{"ast":null,"code":"var _jsxFileName = \"/Users/SophiaLi/Documents/git/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; // Functional component:\n// const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         (position) => console.log(position),\n//         (err) => console.log(err)\n//     )\n//     return (\n//     <div>Latitude: </div>\n//     )\n// }\n// Class based component\n// We are subclassing React.Component, basically borrowing functionality into our App class\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: \"\"\n    };\n  }\n\n  // componenet did mount does the same stuff as constructor func\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  } // We have to define render when using React\n\n\n  render() {\n    // return (\n    // <div>Latitude: {this.state.lat}\n    // < br />\n    // Error: {this.state.errorMessage}\n    // </div>\n    // );\n    // conditional rendering - returning different JSX depending on state/props of the component\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      // return <div>Latitude: {this.state.lat}</div>;\n      return React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Loading!\");\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/SophiaLi/Documents/git/seasons/src/index.js"],"names":["React","ReactDOM","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAFwB;AAAA;;AAGhC;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,KAAd,CADd,EAEEC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAApB,KAAd,CAFT;AAID,GAT+B,CAWhC;;;AACAC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAI,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACD;;AACD,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C;AACA,aAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AA7B+B;;AAgClCJ,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Functional component:\n// const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         (position) => console.log(position),\n//         (err) => console.log(err)\n//     )\n//     return (\n//     <div>Latitude: </div>\n//     )\n// }\n\n// Class based component\n// We are subclassing React.Component, basically borrowing functionality into our App class\nclass App extends React.Component {\n  // state is the same as the constructor function\n  state = { lat: null, errorMessage: \"\" };\n  // componenet did mount does the same stuff as constructor func\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  // We have to define render when using React\n  render() {\n    // return (\n    // <div>Latitude: {this.state.lat}\n    // < br />\n    // Error: {this.state.errorMessage}\n    // </div>\n    // );\n\n    // conditional rendering - returning different JSX depending on state/props of the component\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      // return <div>Latitude: {this.state.lat}</div>;\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n    return <div>Loading!</div>;\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}